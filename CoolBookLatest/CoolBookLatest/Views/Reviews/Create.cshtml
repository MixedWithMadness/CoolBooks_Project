@model CoolBookLatest.Models.ReviewViewModel

@{
    ViewBag.Title = "Create";
}
<style type="text/css">
    .rating-star-block .star.outline {
        background: url("/Images/star-empty-lg.png") no-repeat scroll 0 0 rgba(0, 0, 0, 0);
    }

    .rating-star-block .star.filled {
        background: url("/Images/star-fill-lg.png") no-repeat scroll 0 0 rgba(0, 0, 0, 0);
    }

    .rating-star-block .star {
        color: rgba(0,0,0,0);
        display: inline-block;
        height: 24px;
        overflow: hidden;
        text-indent: -999em;
        width: 24px;
    }

    a {
        color: #005782;
        text-decoration: none;
    }
</style>
<h2>Create</h2>

@using (Html.BeginForm()) 
{
    
    
    <div class="form-horizontal">
        <h4>Reviews</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.BookId, "BookId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("BookId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BookId, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Text, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 rating-star-block" id="1">
                @Html.AntiForgeryToken()
                <a class="star outline" href="#" rating="1" title="vote 1"> vote 1</a>
                <a class="star outline" href="#" rating="2" title="vote 2"> vote 2</a>
                <a class="star outline" href="#" rating="3" title="vote 3"> vote 3</a>
                <a class="star outline" href="#" rating="4" title="vote 4"> vote 4</a>
                <a class="star outline" href="#" rating="5" title="vote 5"> vote 5</a>
                @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsDeleted)
                    @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
        <div id="myElem" style="position:absolute; top:10px; left:50%; display:none; background-color:yellow; padding:5px; border:1px solid red">
            Thank you for your rating!
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
