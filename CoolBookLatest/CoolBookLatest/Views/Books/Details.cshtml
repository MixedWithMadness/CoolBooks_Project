@model CoolBookLatest.Models.BookViewModel

@{
    ViewBag.Title = "Details";
}
<style type="text/css">
    .rating-star-block .star.outline {
        background: url("/Images/star-empty-lg.png") no-repeat scroll 0 0 rgba(0, 0, 0, 0);
    }

    .rating-star-block .star.filled {
        background: url("/Images/star-fill-lg.png") no-repeat scroll 0 0 rgba(0, 0, 0, 0);
    }

    .rating-star-block .star {
        color: rgba(0,0,0,0);
        display: inline-block;
        height: 24px;
        overflow: hidden;
        text-indent: -999em;
        width: 24px;
    }

    a {
        color: #005782;
        text-decoration: none;
    }
</style>
<h2>Details</h2>

<div class="container col-lg-4">
    <img src="~/Content/@Model.ImagePath" alt="Book Cover" class="img-responsive img-rounded" style="width:250px; height:375px;">
</div>

<div class="container col-lg-8">
    <h4>Books</h4>
    
    <dl class="dl-horizontal">

        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AlternativeTitle)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AlternativeTitle)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Part)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Part)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ISBN)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ISBN)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PublishDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PublishDate)
        </dd>

        @*<dt>
            @Html.DisplayNameFor(model => model.ImagePath)
            
        </dt>*@

        @*<dd>
            @Html.DisplayFor(model => model.ImagePath)
        </dd>*@

        @*<dt>
            @Html.DisplayNameFor(model => model.Created)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Created)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsDeleted)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsDeleted)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AspNetUsers.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AspNetUsers.Email)
        </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.Authors.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Authors.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Genres.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Genres.Name)
        </dd>

    </dl>
</div>
<p>
    @if (User.IsInRole("Admin")) {
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) } 
    @Html.ActionLink("Back to List", "Index")
</p>
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("Create", "Reviews", FormMethod.Post, new { id = "CreateForm" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal col-lg-8 ">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group hidden">
                @Html.Label("BookId", "BookId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Editor("BookId", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage("BookId", "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.Label("Title", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Editor("Title", new { htmlAttributes = new { @class = "form-control ", @Value = "" } })
                    @Html.ValidationMessage("Title", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Text", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextArea("Text", new { id = "questionInput", cols = "55", rows = "5", maxlength = 500, htmlAttributes = new { @class = "form-control" } })
                    <p id="charsLeft">500 characters left</p>
                    @Html.ValidationMessage("Text", "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Rating", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10 rating-star-block" id="1">

                    <a class="star outline" href="#" rating="1" title="vote 1"> vote 1</a>
                    <a class="star outline" href="#" rating="2" title="vote 2"> vote 2</a>
                    <a class="star outline" href="#" rating="3" title="vote 3"> vote 3</a>
                    <a class="star outline" href="#" rating="4" title="vote 4"> vote 4</a>
                    <a class="star outline" href="#" rating="5" title="vote 5"> vote 5</a>
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            @*<div class="form-group">
                    @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsDeleted)
                            @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@

            <div id="myElem" style="top:10px; left:50%; display:none; background-color:yellow; padding:5px; border:1px solid red">
                Thank you for your rating!
            </div>


            <div class="form-group">
                <div class="text-danger col-md-offset-2 col-md-10">
                    @Request.Params["errorMsg"]
                </div>
            </div>
        </div>
    }
}

@if (Model.Reviews != null)
{
    foreach (var item in Model.Reviews)
    {
        <div>
            <hr />
            <h4>
                @Html.DisplayTextFor(modelItem => item.Title) <span>|</span>
                @Html.DisplayTextFor(modelItem => item.UserId)
            </h4>
            <div>
                @Html.TextAreaFor(modelItem => item.Text, new { cols = "55", rows = "5", @readonly = "readonly" })
                
            </div>
            @if(User.IsInRole("Admin") || User.IsInRole("Moderator"))
            {
            <div>
                @Html.ActionLink("Delete", "Delete", "Reviews", new { id = item.Id }, null)
            </div>
            }
        </div>
    }
}

<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
<script>
    $(function () {
        $("#questionInput").keyup(function () {
            var charsLeft = $(this).attr("maxlength") - $(this).val().length;
            $("#charsLeft").text(charsLeft + " characters left");
        });
    });
</script>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")
}