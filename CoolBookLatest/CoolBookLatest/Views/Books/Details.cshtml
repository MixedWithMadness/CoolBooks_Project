@model CoolBookLatest.Models.BookViewModel

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Books</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AlternativeTitle)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AlternativeTitle)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Part)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Part)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ISBN)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ISBN)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.PublishDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.PublishDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ImagePath)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ImagePath)
        </dd>

        @*<dt>
            @Html.DisplayNameFor(model => model.Created)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Created)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsDeleted)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsDeleted)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AspNetUsers.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AspNetUsers.Email)
        </dd>*@

        <dt>
            @Html.DisplayNameFor(model => model.Authors.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Authors.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Genres.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Genres.Name)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>

@if (Model.Reviews != null)
{
    foreach (var item in Model.Reviews)
    {
        <hr />
        <h4>
           
            @Html.DisplayTextFor(modelItem => item.Title)
        </h4>

        <h4>
            @Html.DisplayTextFor(modelItem => item.UserId)
        </h4>
        <div>
            @Html.TextBoxFor(modelItem => item.Text, new { @readonly = "readonly" })
        </div>
        if(Request.IsAuthenticated)
        {
         <div>
             @Html.ActionLink("Delete", "Delete", "Reviews", new { id = item.Id }, null)
         </div>
        }
    }
}
@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("Create", "Reviews", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
    
        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group hidden">
                @Html.Label("BookId", "BookId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Editor("BookId", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage("BookId", "", new { @class = "text-danger" })
                </div>
            </div>
    
            @*<div class="form-group">
                    @Html.LabelFor(model => model.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>*@
    
            <div class="form-group">
                @Html.Label("Title", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Editor("Title", new { htmlAttributes = new { @class = "form-control ", @Value = "" } })
                    @Html.ValidationMessage("Title", "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.Label("Text", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Editor("Text", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage("Text", "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.Label("Rating", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.Editor("Rating", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessage("Rating", "", new { @class = "text-danger" })
                </div>
            </div>
    
            @*<div class="form-group">
                    @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                    </div>
                </div>*@
    
            @*<div class="form-group">
                    @Html.LabelFor(model => model.IsDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsDeleted)
                            @Html.ValidationMessageFor(model => model.IsDeleted, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
}